  Stdafx.cpp
  AssemblyInfo.cpp
  DataAccess.cpp
  Running Code Analysis for C/C++...
  Generating Code...
  .NETFramework,Version=v4.5.2.AssemblyAttributes.cpp
  AssemblyInfo.obj : /DEBUG:FASTLINK is not supported when managed code is present; restarting link with /DEBUG:FULL
  DataAccess.vcxproj -> C:\Users\Jonathan\documents\visual studio 2015\Projects\DataAccess\Debug\DataAccess.dll
  DataAccess.vcxproj -> C:\Users\Jonathan\documents\visual studio 2015\Projects\DataAccess\Debug\DataAccess.pdb (Partial PDB)
  Running Code Analysis...
c:\users\jonathan\documents\visual studio 2015\projects\dataaccess\dataaccess\dataaccess.cpp(134): warning CA2202: Microsoft.Usage : Object '$S4' can be disposed more than once in method 'DataAccess::CallQueryField(String^, String^, DataTable)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 134
c:\users\jonathan\documents\visual studio 2015\projects\dataaccess\dataaccess\dataaccess.cpp(150): warning CA2202: Microsoft.Usage : Object 'A_2' can be disposed more than once in method 'DataAccess::CallQueryField(String^, String^, DataTable)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 150
c:\users\jonathan\documents\visual studio 2015\projects\dataaccess\dataaccess\dataaccess.cpp(126): warning CA2100: Microsoft.Security : The query string passed to 'SqlCommand::CommandText::set(String^)' in 'DataAccess::CallQueryField(String^, String^, DataTable)' could contain the following variables 'A_1'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.
c:\users\jonathan\documents\visual studio 2015\projects\dataaccess\dataaccess\dataaccess.cpp(101): warning CA2202: Microsoft.Usage : Object '$S3' can be disposed more than once in method 'DataAccess::CallQueryRow(String^, String^, DataTable)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 101
c:\users\jonathan\documents\visual studio 2015\projects\dataaccess\dataaccess\dataaccess.cpp(93): warning CA2100: Microsoft.Security : The query string passed to 'SqlCommand::CommandText::set(String^)' in 'DataAccess::CallQueryRow(String^, String^, DataTable)' could contain the following variables 'A_1'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.
c:\users\jonathan\documents\visual studio 2015\projects\dataaccess\dataaccess\dataaccess.cpp(67): warning CA2202: Microsoft.Usage : Object '$S2' can be disposed more than once in method 'DataAccess::CallQueryTable(String^, String^, DataTable)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 67
c:\users\jonathan\documents\visual studio 2015\projects\dataaccess\dataaccess\dataaccess.cpp(59): warning CA2100: Microsoft.Security : The query string passed to 'SqlCommand::CommandText::set(String^)' in 'DataAccess::CallQueryTable(String^, String^, DataTable)' could contain the following variables 'A_1'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.
c:\users\jonathan\documents\visual studio 2015\projects\dataaccess\dataaccess\dataaccess.cpp(28): warning CA2202: Microsoft.Usage : Object '$S1' can be disposed more than once in method 'DataAccess::CallTransaction(String^, String^, DataTable)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 28
c:\users\jonathan\documents\visual studio 2015\projects\dataaccess\dataaccess\dataaccess.cpp(45): warning CA2202: Microsoft.Usage : Object 'A_2' can be disposed more than once in method 'DataAccess::CallTransaction(String^, String^, DataTable)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 45
c:\users\jonathan\documents\visual studio 2015\projects\dataaccess\dataaccess\dataaccess.cpp(20): warning CA2100: Microsoft.Security : The query string passed to 'SqlCommand::CommandText::set(String^)' in 'DataAccess::CallTransaction(String^, String^, DataTable)' could contain the following variables 'A_1'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.
  Code Analysis Complete -- 0 error(s), 10 warning(s)
